<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>MySQL on oooonlyhy</title>
    <link>http://onlyhy.github.io/categories/mysql/</link>
    <description>Recent content in MySQL on oooonlyhy</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Tue, 20 Jun 2017 00:00:00 +0000</lastBuildDate><atom:link href="http://onlyhy.github.io/categories/mysql/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>关于MySQL（1）</title>
      <link>http://onlyhy.github.io/posts/2017-06-20-mysql1/</link>
      <pubDate>Tue, 20 Jun 2017 00:00:00 +0000</pubDate>
      
      <guid>http://onlyhy.github.io/posts/2017-06-20-mysql1/</guid>
      <description>管理MySQL的命令 MySQL 连接 数据库 数据类型 数据表 数据 WHERE、UPDATE、DELETE、LIKE子句 UNION操作符 ORDER BY排序 Group by分组 JOIN连接的使用  NULL值处理 JSON  管理MySQL的命令    USE 数据库名    选择要操作的Mysql数据库
mysql&amp;gt; use RUNOOB; Database changed  SHOW DATABASES    列出MySQL数据库管理系统的数据库列表
SHOW TABLES    显示指定数据库的所有表，使用该命令前需要使用 use 命令来选择要操作的数据库
SHOW COLUMNS FROM 数据表    显示数据表的属性，属性类型，主键信息 ，是否为 NULL，默认值等其他信息
SHOW INDEX FROM 数据表    显示数据表的详细索引信息，包括PRIMARY KEY（主键）
SHOW TABLE STATUS LIKE [FROM db_name] [LIKE &amp;lsquo;pattern&amp;rsquo;] \G    该命令将输出Mysql数据库管理系统的性能及统计信息</description>
    </item>
    
    <item>
      <title>关于MySQL（2）</title>
      <link>http://onlyhy.github.io/posts/2017-06-20-mysql2/</link>
      <pubDate>Tue, 20 Jun 2017 00:00:00 +0000</pubDate>
      
      <guid>http://onlyhy.github.io/posts/2017-06-20-mysql2/</guid>
      <description>事务 ALTER命令 索引 临时表 复制表 元数据 序列使用 处理重复数据 SQL注入 导出导入数据  事务    用于处理操作量大，复杂度高的数据,只有使用了 Innodb 数据库引擎的数据库或表才支持事务,保证成批的 SQL 语句要么全部执行，要么全部不执行。 四个特性：
 Atomicity（原子性）：一组事务，要么成功；要么撤回 Consistency（稳定性）：有非法数据（外键约束之类），事务撤回 Isolation（隔离性）：事务独立运行。一个事务处理后的结果，影响了其他事务，那么其他事务会撤回。事务的100%隔离，需要牺牲速度 Durability（可靠性）：软、硬件崩溃后，InnoDB数据表驱动会利用日志文件重构修改。可靠性和高速度不可兼得， innodb_flush_log_at_trx_commit 选项 决定什么时候把事务保存到日志里  事务控制语句     BEGIN或START TRANSACTION：显示地开启一个事务 COMMIT：也可以使用COMMIT WORK，二者等价，提交事务，并使已对数据库进行的所有修改称为永久性的 ROLLBACK：有可以使用ROLLBACK WORK，二者等价，回滚会结束用户的事务，并撤销正在进行的所有未提交的修改 SAVEPOINT identifier：SAVEPOINT允许在事务中创建一个保存点，一个事务中可以有多个SAVEPOINT RELEASE SAVEPOINT identifier：删除一个事务的保存点，当没有指定的保存点时，执行该语句会抛出一个异常 ROLLBACK TO identifier；把事务回滚到标记点 SET TRANSACTION：用来设置事务的隔离级别。InnoDB存储引擎提供事务的隔离级别有READ UNCOMMITTED、READ COMMITTED、REPEATABLE READ和SERIALIZABLE  事务处理    法一：用 BEGIN, ROLLBACK, COMMIT来实现 法二：直接用 SET 来改变 MySQL 的自动提交模式:SET AUTOCOMMIT=0 禁止自动提交，SET AUTOCOMMIT=1 开启自动提交。</description>
    </item>
    
  </channel>
</rss>

<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>HTTP on oooonlyhy</title>
    <link>http://onlyhy.github.io/categories/http/</link>
    <description>Recent content in HTTP on oooonlyhy</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Thu, 13 Jul 2017 00:00:00 +0000</lastBuildDate><atom:link href="http://onlyhy.github.io/categories/http/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>HTTP的GET与POST方法对比</title>
      <link>http://onlyhy.github.io/posts/2017-07-13-get%E4%B8%8Epost%E5%AF%B9%E6%AF%94/</link>
      <pubDate>Thu, 13 Jul 2017 00:00:00 +0000</pubDate>
      
      <guid>http://onlyhy.github.io/posts/2017-07-13-get%E4%B8%8Epost%E5%AF%B9%E6%AF%94/</guid>
      <description>HTTP    超文本传输协议（HTTP）的设计目的是保证客户端与服务器之间的通信
HTTP 的工作方式是客户端与服务器之间的请求-应答协议
两种HTTP请求方法：GET和POST     GET - 从指定的资源请求数据 POST - 向指定的资源提交要被处理的数据  GET    查询字符串（名称/值对）是在 GET 请求的 URL 中发送的
$.get(URL,callback);
如：
/test/demo_form.php?name1=value1&amp;amp;name2=value2
 GET 请求可被缓存 GET 请求保留在浏览器历史记录中 GET 请求可被收藏为书签 GET 请求不应在处理敏感数据时使用如发送密码 GET 请求有长度限制 GET 请求只应当用于取回数据  POST    查询字符串（名称/值对）是在 POST 请求的 HTTP 消息主体中发送的
$.post(URL,data,callback);
如： POST /test/demo_form.php HTTP/1.1
Host: w3cschool.cc
name1=value1&amp;amp;name2=value2
 POST 请求不会被缓存 POST 请求不会保留在浏览器历史记录中 POST 不能被收藏为书签 POST 请求对数据长度没有要求  </description>
    </item>
    
  </channel>
</rss>

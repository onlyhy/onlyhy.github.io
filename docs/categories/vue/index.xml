<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Vue on oooonlyhy</title>
    <link>http://onlyhy.github.io/categories/vue/</link>
    <description>Recent content in Vue on oooonlyhy</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Tue, 17 Apr 2018 00:00:00 +0000</lastBuildDate><atom:link href="http://onlyhy.github.io/categories/vue/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Vue学习小记</title>
      <link>http://onlyhy.github.io/posts/2018-04-17-vue.js%E5%B0%8F%E8%AE%B0/</link>
      <pubDate>Tue, 17 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>http://onlyhy.github.io/posts/2018-04-17-vue.js%E5%B0%8F%E8%AE%B0/</guid>
      <description>黄黄说：“不会的就多看几遍”
Vue官方教程基础部分    读Vue.js官方文档所记
 计算属性(computed)有缓存，方法(methods)无缓存 需要在数据变化时执行异步或开销较大的操作，自定义侦听器, watch css属性可用 驼峰式 (camelCase) 或短横线分隔 (kebab-case，记得用单引号括起来) 来命名 v-bind:style使用需要添加浏览器引擎前缀的CSS属性时，如transform，Vue.js会自动侦测并添加相应前缀 添加具有唯一值的key属性表达元素是完全独立的，不需要复用 v-show元素始终会被渲染并保留在DOM,只是简单切换元素的CSS属性display 如果要频繁的切换用v-show，很少改变用v-if v-for比v-if有更高优先级，意味着v-if将分别重复运行于每个v-for循环中 v-model双向数据绑定，监听用户的输入事件以更新数据 可以用&amp;lt;style scoped&amp;gt;&amp;lt;/style&amp;gt;来声明样式只在本模板中起作用  To Be Continued…</description>
    </item>
    
    <item>
      <title>Vue组件</title>
      <link>http://onlyhy.github.io/posts/2018-04-12-vue%E7%BB%84%E4%BB%B6/</link>
      <pubDate>Thu, 12 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>http://onlyhy.github.io/posts/2018-04-12-vue%E7%BB%84%E4%BB%B6/</guid>
      <description>读Vue.js官方文档组件部分所记
组件（Component）     可以扩展HTML元素，封装可重用的代码。 有些情况下，也可表现为用is特性进行扩展的原生HTML元素。 Vue 组件同时也都是 Vue 的实例，所以可接受相同的选项对象 (除了一些根级特有的选项) 并提供相同的 生命周期钩子 （不懂含义，后期学习）  一、使用组件    1.1 全局注册    Vue.component(tagName,options)   tagName最优是遵循W3C规则（小写，包含一个短杠） 组件在实例模板中使用，要确保在初始化根实例之前注册组件  1.2 局部注册    可用某个Vue实例或组件的实例选项 components 注册仅在其作用域可用的组件
var Child = { template: &#39;&amp;lt;div&amp;gt;A custom component!&amp;lt;/div&amp;gt;&#39; } new Vue({ // ... components: { // &amp;lt;my-component&amp;gt; 将只在父组件模板中可用 &#39;my-component&#39;: Child } })  1.3 DOM模板解析注意事项    DOM作为模板时，会受到HTML本身的限制，像&amp;lt;ul&amp;gt; &amp;lt;ol&amp;gt; &amp;lt;table&amp;gt;这种元素允许包含的内容有限制等，对于这些受限制的元素使用自定义组件有时会导致被当做无效内容等问题，可用is 特性解决。</description>
    </item>
    
  </channel>
</rss>

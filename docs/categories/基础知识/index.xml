<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>基础知识 on oooonlyhy</title>
    <link>http://onlyhy.github.io/categories/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/</link>
    <description>Recent content in 基础知识 on oooonlyhy</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Thu, 01 Jun 2017 00:00:00 +0000</lastBuildDate><atom:link href="http://onlyhy.github.io/categories/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>NPM</title>
      <link>http://onlyhy.github.io/posts/2017-06-01-npm/</link>
      <pubDate>Thu, 01 Jun 2017 00:00:00 +0000</pubDate>
      
      <guid>http://onlyhy.github.io/posts/2017-06-01-npm/</guid>
      <description>介绍    NPM是同NODEJS一起安装的包管理工具，常见场景：
 从NPM服务器下载别人编写的第三方包到本地使用 从NPM服务器下载并安装别人编写的命令行程序到本地使用 将自己编写的包或命令行程序上传到NPM服务器供别人使用  安装模块    npm安装Node.js模块
npm install &amp;lt;Module Name&amp;gt;  如安装常用的web框架模块express
npm install express //本地安装 npm install express -g //全局安装  安装后就在工程的node_modules目录中，只需要通过require(&#39;express&#39;)方式就好
查看安装信息：
npm list -g  查看某个模块的版本号：
npm list grunt  使用package.json    位于模块的目录下，用于定义包的属性。 package.json属性说明：
name - 包名。
version - 包的版本号。
description - 包的描述。
homepage - 包的官网 url 。
author - 包的作者姓名。
contributors - 包的其他贡献者姓名。
dependencies - 依赖包列表。如果依赖包没有安装，npm 会自动将依赖包安装在 node_module 目录下。</description>
    </item>
    
  </channel>
</rss>

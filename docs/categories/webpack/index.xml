<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Webpack on oooonlyhy</title>
    <link>http://onlyhy.github.io/categories/webpack/</link>
    <description>Recent content in Webpack on oooonlyhy</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Mon, 10 Jul 2017 00:00:00 +0000</lastBuildDate><atom:link href="http://onlyhy.github.io/categories/webpack/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>webpack手记</title>
      <link>http://onlyhy.github.io/posts/2017-07-10-webpack/</link>
      <pubDate>Mon, 10 Jul 2017 00:00:00 +0000</pubDate>
      
      <guid>http://onlyhy.github.io/posts/2017-07-10-webpack/</guid>
      <description>一、常规    例：
  index.html中有src链到bundle.js(最终打包生成的文件)
  创建runoob1.js和runoob1.js
  runoob1.js中require(./runoob2.js)
  打包webpack runoob1.js bundle.js
  最终index中先执行runoob1.js，其他模块在require时用到
  二、LOADER:    Webpack 本身只能处理 JavaScript 模块，如果要处理其他类型的文件，就需要使用 loader 进行转换。
要用css文件，需要使用css-loader和style-loader。
css-loader:遍历css文件，找到url()表达式然后处理。
style-loader：把原来的css代码插入到页面的一个style标签中。
cnpm install css-loader style-loader -g 
将会生成node_modules 目录，是 css-loader 和 style-loader 的安装目录。
例：
 创建一个style.css文件 修改runoob1.js，添加语句：require(&amp;quot;!style-loader!css-loader!./style.css&amp;quot;); 打包 webpack runoob1.js bundle.js  *require CSS 文件的时候都要写 loader 前缀 !style-loader!css-loader!
*可以根据模块类型（扩展名）来自动绑定需要的 loader：
 将runoob1.js中语句改为 require(&amp;quot;./style.css&amp;quot;) 打包</description>
    </item>
    
  </channel>
</rss>

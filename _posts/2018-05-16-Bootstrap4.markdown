---
layout: post
title:  "Bootstrap4手册笔记"
date:   2018-05-16 09:00:00 +00:00
categories: Bootstrap
author: onlyhy
---

黄黄说：“少说话，多做事”

读[Bootstrap4中文文档](https://v4.bootcss.com/docs/4.0/getting-started/introduction/)所记

# 目录

- [浏览器与设备调优](#浏览器与设备调优)
- [布局](#布局)
- [内容](#内容)
- [组件](#组件)

## 浏览器与设备调优

### 不支持IE9

### 移动设备的模态框和下拉组件

#### Overflow溢出和scroll滚动

iOS和安卓中，对于`<body>`元素中使用`overflow: hidden;`的支持很有限。因此在这两种设备中，当你滚动超过一个模态窗口的顶部或底部，`<body>`内容也会开始滚动

#### iOS文本字段和滚动

从IOS9.2开始，当一个模态启用，如果手势触模在一个`<input>`文本或`<textarea>`文本框内，则`<body>`中的内容将被滚动，而不是模态本身滚动

#### 无冲突处理

有时，必须使用Bootstrap插件和其他UI框架,偶尔会发生命名空间冲突,可以调用`.noConflict`恢复插件的值：

    var bootstrapButton = $.fn.button.noConflict() // return $.fn.button to previously assigned value
    $.fn.bootstrapBtn = bootstrapButton // give $().bootstrapBtn the Bootstrap functionality

## 布局

### 栅格 

* 不同于旧版3.0，新版是完全基于`flexbox`流式布局构建的，完全支持响应式标准。
* `flexbox`布局不需要指定列的宽度就能实现网页自动等宽排列。
* 指定一列进行宽度定义，其他列将自动调整大小。
* 使用`.col-{breakpoint}-auto`断点方法，可以实现根据其内容的自然宽度来对列进行大小调整。
* 等宽多行：创建跨多个行的等宽列，方法是插入 `.w-100` 的div
* `flexbox`可轻松实现div空间布局的垂直(align)与水平(justify)对齐
* 使用 `.order-* `选择符，可对div进行排序
* 使用 `.offset-*`， `.offset-md-*`栅格偏移
* 使用 `.ml-auto` 与 `.mr-auto` 来强制隔离两边的距离
* 使用 `.no-gutters` 类来消除间隙沟槽
* 使用BootStrap v4内置的栅格系统之Sass变量和 maps文件，可以完全自定义自己的栅格环境、并可以更改DIV层次、媒体查询维度和container容器宽度，然后重新编译。

### 媒体对象

* 只需要两个Class选择器，分别引用`.media`和`.media-body`来装载的内容
* 媒体对象可以无限嵌套，建议尽量减少嵌套
* 媒体对象中的媒体可以与flexbox流式布局一样，实现对齐到顶部、中间、底部
* 设置`order`属性可以更改媒体对象中内容顺序
* 可以在ul，li中添加媒体对象


## 内容

### Reboot

* 删除了默认的Web字体`（Helvetica Neue，Helvetica和Arial）`，并替换为“本地OS字体引用机制”
* 所有标题和段落元素（列如`<h1>`以及`<p>`）都被重置，系统移除它们的上外边距`margin-top`定义，标题添加外边距为`margin-bottom: .5rem`，段落元素`<p>`添加了外边距`margin-bottom:1rem`以形成简洁行距
* 移除所有的列表元素`（<ul>、<ol>、 <dl>）`的外边距`margin-top`，并设置为`margin-bottom: 1rem`，被嵌套的子列表无`margin-bottom`值

### 排版

* `.display-*` 显式大标题
* `.lead` 定义一个中心段落，用于提示这是中心内容或重要内容
* 引用文档中另一个来源的内容块，请在一段HTML外面包裹 `<blockquote class="blockquote">`，作为引用， 推荐使用p作为子级包裹容器。`` <footer class="blockquote-footer">` 用于标识来源， `.text-center`、`.text-right`等做对齐处理
* `.list-inline` 、 `.list-inline-item` 实现列表逐行显示（默认）、单行多列并排（从左到右）

### 代码

* 用`<code>`包裹内联代码片段，转义HTML尖括号
* 使用 `<pre>`标签可以包裹代码块，转义HTML尖括号， `.pre-scrollable` 可以实现垂直滚动的效果
* `<var>` 标签包裹表示变量
* `<kbd>` 表明是键盘输入操作
* `<samp>` 表示一个示例

### 图片

* `.img-fluid` 响应式图片
* `.img-thumbnail`  图片自动被加上一个带圆角且1px边界的外框缩略图样式
* `<picture>` 元素，它可以为 `<img>`指定多个`<source>` 定义，确保在`<img>` 标签里使用`.img-*` 进行定义绑定而不是`<picture>`标签。

### 表格

* `<table>`添加 `.table` 是基本样式
* `.table-dark`颜色反转对比效果，深色背景和浅色文本
* `.thead-light` 或`.thead-dark`  ，使 `<thead>`区显示出浅黑或深灰
* `.table-striped` 定义 `<tbody>`，条纹状表格（还可结合.table-dark等）
* `.table-bordered` 类可以产生表格边框与间隙
* `.table-hover` 定义到 `<tbody>`上，可以产生行悬停效果
* `.table-sm` 可以将表格的`padding`值缩减一半，使表格更加紧凑
* `.table-*`样式对表格逐行或单个单元格着色，深色表格可用`.bg-*`
* `<caption> `标签如同一个表格的标题，默认是隐藏，帮助用户了解表格内容
* `.table-responsive` 选择器使表格支持水平响应
* `.table-responsive{-sm|-md|-lg|-xl}`可以根据需要对不同屏幕尺寸断点表格进行响应式设计

### 图文框

* `.figure`样式定义内容区包括一张图和一个可选的标题
* 将`.img-fluid`添加到<img>标签中才能实现与响应式的完美结合
* `.text-*`可控制文字对齐方式



## 组件

- [警告提示框](#警告提示框)
- [徽章](#徽章(Badge))
- [面包屑](#面包屑（breadcrumb）)
- [按钮](#按钮（Button）)
- [按钮组](#按钮组（Button-group）)
- [卡片](#卡片(card))
- [轮播效果](#轮播效果(Carousel))
- [折叠面板](#折叠面板(Collapse))
- [下拉菜单](#下拉菜单(Dropdowns))
- [表单](#表单(Forms))
- [输入框](#输入框(input-group))
- [大块屏](#大块屏(Jumbotron))
- [列表组](#列表组(list-group))
- [模态框](#模态框(Modal))
- [导航](#导航(nav))
- [导航栏](#导航栏(navbar))
- [分页](#分页(Pagination))
- [POP提示](#POP提示(popover))
- [进度条](#进度条(progress))
- [滚动监听](#滚动监听(Scrollspy))
- [提示冒泡](#提示冒泡(Tooltip))


### 警告提示框

### 徽章(Badge)

### 面包屑（breadcrumb）

### 按钮（Button）

### 按钮组（Button-group）

### 卡片(card)

### 轮播效果(Carousel)

### 折叠面板(Collapse)

### 下拉菜单(Dropdowns)

### 表单(Forms)

### 输入框(input-group)

### 大块屏(Jumbotron)

### 列表组(list-group)

### 模态框(Modal)

### 导航(nav)

### 导航栏(navbar)

### 分页(Pagination)

### POP提示(popover)

### 进度条(progress)

### 滚动监听(Scrollspy)

### 提示冒泡(Tooltip)
---
layout: post
title: "NPM基础知识"
date: 2017-06-01 08:00:00 +00:00
categories: 基础知识
author: onlyhy
---

### 介绍  
  NPM是同NODEJS一起安装的包管理工具，常见场景：
   1. 从NPM服务器下载别人编写的第三方包到本地使用
   2. 从NPM服务器下载并安装别人编写的命令行程序到本地使用
   3. 将自己编写的包或命令行程序上传到NPM服务器供别人使用  

### 安装模块  
  npm安装Node.js模块

    npm install <Module Name> 

  如安装常用的web框架模块express

    npm install express  //本地安装
    npm install express -g  //全局安装

  安装后就在工程的node_modules目录中，只需要通过`require('express')`方式就好  
  查看安装信息：

    npm list -g  

  查看某个模块的版本号：

    npm list grunt  

### 使用package.json  
  位于模块的目录下，用于定义包的属性。
  package.json属性说明： 

  name - 包名。  
  version - 包的版本号。  
  description - 包的描述。  
  homepage - 包的官网 url 。  
  author - 包的作者姓名。  
  contributors - 包的其他贡献者姓名。  
  dependencies - 依赖包列表。如果依赖包没有安装，npm 会自动将依赖包安装在 node_module 目录下。  
  repository - 包代码存放的地方的类型，可以是 git 或 svn，git 可在 Github 上。  
  main - main 字段是一个模块ID，它是一个指向你程序的主要项目。就是说，如果你包的名字叫express，然后用户安装它，然后require("express")。  
  keywords - 关键字 

### 卸载模块  

    npm update express  

### 搜索模块  

    npm search express  

### 创建模块  

  package.json文件必不可少，可使用NPM生成package.json文件

    $ npm init  

  根据情况输入，最后输入“yes”后会生成package.json文件。  

  在npm资源库中注册用户（使用邮箱注册）：

    $ npm adduser
    Username: onlyhy
    Password:
    Email: (this IS public) onlyhy@163.com  

  发布模块

    $ npm publish  

### 版本号  
  NPM使用语义版本号来管理代码，语义版本号分为X.Y.Z三位，分别代表主版本号、次版本号和补丁版本号。
  更新原则：
  1. 只是修复bug，需要更新Z位
  2. 新增了功能，但是向下兼容，需要更新Y位
  3. 有大变动，向下不兼容，需要更新X位
  除了可依赖一个固定版本号外，还可依赖于某个范围的版本号，如"argv":"0.0.x"表示依赖于0.0.x系列的最新版argv。  

### NPM 常用命令  
  1. instal和publish,使用`npm help` 可查看所有命令
  2. `npm help <command>` 可查看某条命令的详细帮助
  3. 在package.json所在目录下使用`npm install，-g`可现在本地安装当前命令行程序，可用于发布前的本地测试  
  4. `npm update <package>` 可以把当前目录下node_modules子目录里面的对应模块更新到最新版本  
  5. `npm update <package> -g`可以把全局安装的对应命令行程序更新至最新
  6. `npm cache clear`可以清空NPM本地缓存，用于对付使用相同版本号发布新版代码的人
  7. `npm unpublish <package>@<version>`可撤销发布自己发布过的某个版本代码

### 淘宝NPM镜像
  是一个完整的npmjs.org镜像，同步频率为10分钟一次  

    $ npm install -g cnpm --registry=https://registry.npm.taobao.org

    $ cnpm install [name]
   

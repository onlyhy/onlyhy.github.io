---
layout: post
title: "AngularJS学习笔记（六）"
date: 2017-07-04 07:00:00 +00:00
categories: AngularJS
author: onlyhy
---
### 模板语法  
#### 模板中HTML
   script元素被禁用，html,body,base元素无意义，剩下的元素基本一样用。  

#### 插值表达式  （{{...}}）  
   一般，括号间的素材是一个模板表达式，Angular先对它求值，再将其转换成字符串。

### 模板表达式  
   产生一个值，将它赋给绑定目标的属性，如{{1+1}}的模板表达式就是1+1。  
   所用语言看起来像JS，但有些是被禁止的，包括：
   1. 赋值（=，+=，-=，...）
   2. new运算符
   3. 使用;或,的链式表达式
   4. 自增或自减操作符
   和JS语法显著不同：
   1. 不支持位运算'|'和&
   2. 有新的模板表达式运算符，如'|'或？

#### 表达式上下文  
   典型的表达式上下文就是这个组件实例，是各种绑定值的来源。也可包括组件之外的对象，如模板输入量和模板引用变量。
   表达式上下文变量是由模板变量、指令的上下文变量和组件的成员变量叠加而成。引用变量名时，模板变量最优先，其次是上下文变量，最后是组件的成员。  
   模板表达式不能引用全局命名空间中的任何东西，只能引用表达式上下文中的成员。  

#### 表达式指南  
   1. 没有可见的副作用  
   2. 执行迅速
   3. 非常简单
   4. 幂等性

#### 没有可见的副作用  
   除了目标属性的值以外，不应该改变应用的任何状态。

#### 执行迅速  
   表达式应快速结束，计算代价较高时，应考虑缓存那些从其它值计算得出的值。  

#### 非常简单  
   常规是属性名或方法调用，应在组件中实现应用和业务逻辑。

#### 幂等性  
   最好使用幂等的表达式，幂等表达式总是返回完全相同的东西，直到某个依赖值发生改变。  

### 模板语句  
   响应由绑定目标触发的事件，出现在=号右侧的引号中。
   语言也像JS，但是它支持基本赋值（=）和表达式链（;和，）

#### 语句上下文  
   只能引用语句上下文中，通常是正在绑定事件的那个组件实例。  
   语句上下文可以引用模板自身上下文中的属性。
   模板上下文的变量名的优先级高于组件上下文中的变量名。
   模板语句不能引用全局命名空间的任何东西。  

#### 语句指南  
  和表达式一样，常规是函数调用或者属性赋值。  

### 绑定语法  
   绑定的类型从根据数据流的方向分成三类：从数据源到视图、从视图到数据源、双向的从视图到数据源再到视图。

<table>
    <thead>
        <tr>
            <td>数据方向</td>
            <td>语法</td>
            <td>绑定类型</td>
        </tr>
    </thead>
    <tbody>
        <tr>
            <td>单向 从数据源到视图目标</td>
            <td>{{expression}}
                [target]="expression"&nbsp;&nbsp;&nbsp;&nbsp;
                           bind-target="expression"
            </td>
            <td>插值表达式，Property，Attribute，类，样式</td>
        </tr>
         <tr>
            <td>单向 从视图目标到数据源</td>
            <td>（target）="statement"&nbsp;&nbsp;&nbsp;&nbsp;
                         on-target="statement"
            </td>
            <td>事件</td>
        </tr>
         <tr>
            <td>双向</td>
            <td>[(target)]="expression"
                 bindon-target="expression"
            </td>
            <td>双向</td>
        </tr>
    </tbody>
</table> 
 


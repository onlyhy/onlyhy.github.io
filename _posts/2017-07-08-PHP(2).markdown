---
layout: post
title: "关于PHP(2)"
date: 2017-07-09 08:00:00 +00:00
categories: PHP
author: onlyhy
---  
<ul>
    <li><a href="#id">表单验证</a></li>
    <li><a href="#dw">多维数组</a></li>
    <li><a href="da">date()数组</a></li>
    <li><a href="bh">包含文件</a></li>
</ul>

### <span id="bd">表单验证 </span> 
   当处理 HTML 表单时，PHP 能把来自 HTML 页面中的表单元素自动变成可供 PHP 脚本使用。   

    <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]);?>">  //超级全局变量，返回当前正在执行脚本的文件名  

   htmlspecialchars()方法，htmlspecialchars() 函数把一些预定义的字符转换为 HTML 实体。能够避免$_SERVER["PHP_SELF"] 被黑客利用，预定义的字符是：  
   & （和号） 成为 &amp;   
   " （双引号） 成为 &quot;  
   ' （单引号） 成为 &#039;  
   < （小于） 成为 &lt;  >（大于） 成为 &gt;   

   执行脚本时，可通过$_SERVER["REQUEST_METHOD"]来检测表单是否被提交。  

#### 必需字段  
   加入了一些新的变量: $nameErr, $emailErr, $genderErr, 和 $websiteErr.。这些错误变量将显示在必需字段上。 为每个$_POST变量增加了一个if else语句。 这些语句将检查 $_POST 变量是 否为空（使用php的 empty() 函数）。如果为空，将显示对应的错误信息。 如果不为空，数据将传递给test_input() 函数。

    <?php
    // 定义变量并默认设为空值
    $nameErr = $emailErr = $genderErr = $websiteErr = "";
    $name = $email = $gender = $comment = $website = "";

    if ($_SERVER["REQUEST_METHOD"] == "POST") {
      if (empty($_POST["name"])) {
        $nameErr = "名字是必需的。";
      } else {
        $name = test_input($_POST["name"]);
      }
      ...
    }
    ?>

   在HTML实例中，为字段添加显示错误信息的脚本。  

    <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]);?>"> 
    名字: <input type="text" name="name">
    <span class="error">* <?php echo $nameErr;?></span>
    <br><br>
    </form>  

#### 验证名称  
   preg_match — 进行正则表达式匹配，int preg_match ( string $pattern , string $subject [, array $matches [, int $flags ]] ) ，在 subject 字符串中搜索与 pattern 给出的正则表达式相匹配的内容。如果提供了 matches ，则其会被搜索的结果所填充。$matches[0] 将包含与整个模式匹配的文本，$matches[1] 将包含与第一个捕获的括号中的子模式所匹配的文本，以此类推。  
 
    $name = test_input($_POST["name"]);
    if (!preg_match("/^[a-zA-Z ]*$/",$name)) {
      $nameErr = "只允许字母和空格"; 
    }  

#### 验证邮件   

     $email = test_input($_POST["email"]);
    if (!preg_match("/([\w\-]+\@[\w\-]+\.[\w\-]+)/",$email)) {
      $emailErr = "非法邮箱格式"; 
    }

#### 验证URL

    $website = test_input($_POST["website"]);
    if (!preg_match("/\b(?:(?:https?|ftp):\/\/|www\.)[-a-z0-9+&@#\/%?=~_|!:,.;]*[-a-z0-9+&@#\/%=~_|]/i",$website)) {
      $websiteErr = "非法的 URL 的地址"; 
    }

#### $_GET 变量  
   收集来自method="get"的表单中的值，从带有 GET 方法的表单发送的信息，对任何人都是可见的（会显示在浏览器的地址栏），因此在发送密码或其他敏感信息时，不应该使用这个方法，并且对发送信息的量也有限制。

    <form action="welcome.php" method="get">
    名字: <input type="text" name="fname">
    年龄: <input type="text" name="age">
    <input type="submit" value="提交">
    </form>  

"welcome.php" 文件现在可以通过 $_GET 变量来收集表单数据了，表单域的名称会自动成为$_GET数组中的键

    欢迎 <?php echo $_GET["fname"]; ?>!<br>
    你的年龄是 <?php echo $_GET["age"]; ?>  岁。  


#### $_POST 变量  
   收集来自method="post"的表单中的值,任何人都是不可见的，对发送信息的量也没有限制，默认情况下为8MB，由于变量不显示在 URL 中，所以无法把页面加入书签。  

#### $_REQUEST 变量  
   包含了 $_GET、$_POST 和 $_COOKIE 的内容，可用来收集通过 GET 和 POST 方法发送的表单数据。

    欢迎 <?php echo $_REQUEST["fname"]; ?>!<br>
    你的年龄是 <?php echo $_REQUEST["age"]; ?>  岁。  


### <span id="dw"></span>多维数组   

    <?php 
    $sites = array 
    ( 
        "runoob"=>array 
        ( 
            "菜鸟教程", 
            "http://www.runoob.com" 
        ), 
        "google"=>array 
        ( 
            "Google 搜索", 
            "http://www.google.com" 
        ), 
        "taobao"=>array 
        ( 
            "淘宝", 
            "http://www.taobao.com" 
        ) 
    ); 
    print("<pre>"); // 格式化输出数组 
    print_r($sites); 
    print("</pre>"); 
    ?>

### <span id="da">date()函数</span>  
   用于格式化时间/日期，可把时间戳格式化为可读性更好的日期和时间。  

    string date ( string $format [, int $timestamp ] )  

format规定时间戳的格式，如d：月中的天(01-31)，m：月(01-12)，Y：年(四位数)，如`echo date("Y-m-d");`,timestamp规定时间戳，默认是当前的日期和时间。  
<a href="http://www.runoob.com/php/php-ref-date.html">查看所有日期函数看这里</a>  

### <span id="bh">包含文件 </span>  
   include 和 require 语句用于在执行流中插入写在其他文件中的有用的代码，两个语句除了处理错误的方式不同，其他方面都是相同的。  
   require 生成一个致命错误（E_COMPILE_ERROR），在错误发生后脚本会停止执行，include 生成一个警告（E_WARNING），在错误发生后脚本会继续执行。






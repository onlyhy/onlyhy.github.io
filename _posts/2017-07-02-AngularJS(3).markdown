---
layout: post
title: "AngularJS学习笔记（三）"
date: 2017-07-02 19:00:00 +00:00
categories: AngularJS
author: onlyhy
---
### 用户输入  
   用户输入触发 DOM 事件。通过事件绑定来监听它们，把更新过的数据导入回我们的组件和 model。

#### 绑定到用户输入事件
   要绑定 DOM 事件，只要把 DOM 事件的名字包裹在圆括号中，然后用放在引号中的模板语句对它赋值就可以。  

    <button (click)="onClickMe()">Click me!</button>  


#### 通过 $event 对象取得用户输入  
   $event对象的属性取决于 DOM 事件的类型,所有标准DOM事件对象都有一个target属性，引用触发该事件的元素。event.target.value返回该元素的当前内容。event.key可替代event.target.value，积累各个按键本身。  
   $event是有类型的，如`onkey(event:any){}`或者`onkey(event:keyboardEvent){}`  

   传入$event违反了模板（用户看到的）和组件（应用如何处理用户数据）之间的分离关注原则。  

#### 从一个模板引用变量中获得用户输入  
   使用模板引用变量，这些变量提供了从模板中直接访问元素的能力，在标识符前加上井号（#）就能声明一个模板引用变量。  

    @Component({
    selector: 'loop-back',
    template: `
    <input #box (keyup)="0">
    <p>{{box.value}}</p>
    `
    })  

本例将keyup事件绑定到了数字0，只有在应用做了异步事件，Angular才更新绑定。

#### 按键事件过滤（key.enter）  
   可以检查每个$event.keyCode，更简单的是绑定到Angular的keyup.enter模拟事件，在用户按指定键时，才调用事件处理器。  

#### 失去焦点事件（blur）  
   同时监听输入框的回车键和失去焦点事件。  

    @Component({
    selector: 'key-up4',
    template: `
    <input #box
      (keyup.enter)="update(box.value)"
      (blur)="update(box.value)">
    <p>{{value}}</p>
    `
    })
    export class KeyUpComponent_v4 {
    value = '';
    update(value: string) { this.value = value; }
    }  

###综合显示与事件绑定  
   显示一个列表，把新的项加到列表中。通过输入按Enter或点击其他地方或点击添加按钮来新增。  
    
    @Component({
    selector: 'little-tour',
    template: `
    <input #newHero
      (keyup.enter)="addHero(newHero.value)"
      (blur)="addHero(newHero.value); newHero.value='' ">
    <button (click)="addHero(newHero.value)">Add</button>
    <ul><li *ngFor="let hero of heroes">{{hero}}</li></ul>
    `
    })
    export class LittleTourComponent {
    heroes = ['Windstorm', 'Bombasto', 'Magneta', 'Tornado'];
    addHero(newHero: string) {
    if (newHero) {
      this.heroes.push(newHero);
       }
     }
    }  

1. 使用模板变量来引用元素 — newHero模板变量引用了`<input>`元素。 你可以在`<input>`的任何兄弟或子级元素中引用newHero。
2. 传递数值，而非元素 — 获取输入框的值并将它传递给组件的addHero，而不要传递newHero。
3. 保持模板语句简单 — (blur)事件被绑定到两个 JavaScript 语句。 
第一句调用addHero。第二句newHero.value=''在添加新英雄到列表中后清除输入框。  





